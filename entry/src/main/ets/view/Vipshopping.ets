
// Êé•Âè£ÂÆö‰πâ
interface BannerItem {
  image: string;
  title: string;
}

interface CategoryItem {
  icon: string;
  name: string;
  color: string;
}

interface ProductItem {
  image: string;
  title: string;
  price: string;
  originalPrice: string;
  tag: string;
}

@Component
export struct Vipshopping {
  @State selectedTab: number = 0;
  @State currentBanner: number = 0;
  private bannerTimer: number = -1;

  // ËΩÆÊí≠ÂõæÊï∞ÊçÆ
  private bannerData: BannerItem[] = [
    { image: 'https://i0.hdslb.com/bfs/activity-plat/static/20220614/e369244d0b14644f5e1a06431e22a4d5/KJunX09bM4.png', title: 'BÁ´ô‰ºöÂëò‰∏ì‰∫´ÂïÜÂìÅ' },
    { image: 'https://i0.hdslb.com/bfs/activity-plat/static/20220614/e369244d0b14644f5e1a06431e22a4d5/VEzQJdAzSI.png', title: 'ÈôêÊó∂‰ºòÊÉ†Ê¥ªÂä®' },
    { image: 'https://i0.hdslb.com/bfs/activity-plat/static/20220614/e369244d0b14644f5e1a06431e22a4d5/MjQxOTY4NzY.png', title: 'Êñ∞ÂìÅÈ¶ñÂèë' }
  ];

  // ÂïÜÂìÅÂàÜÁ±ªÊï∞ÊçÆ
  private categoryData: CategoryItem[] = [
    { icon: 'üéÆ', name: 'Ê∏∏ÊàèÂë®Ëæπ', color: '#FF6B9D' },
    { icon: 'üëï', name: 'ÊúçÈ•∞ÈÖç‰ª∂', color: '#4ECDC4' },
    { icon: 'üì±', name: 'Êï∞Á†Å‰∫ßÂìÅ', color: '#45B7D1' },
    { icon: 'üé®', name: 'ÊñáÂàõÁî®ÂìÅ', color: '#96CEB4' },
    { icon: 'üè†', name: 'ÁîüÊ¥ªÁî®ÂìÅ', color: '#FFEAA7' },
    { icon: 'üìö', name: 'Âõæ‰π¶Èü≥ÂÉè', color: '#DDA0DD' },
    { icon: 'üç≠', name: 'Èõ∂È£üÈ•ÆÂìÅ', color: '#FFB6C1' },
    { icon: 'üéÅ', name: 'Á§ºÂìÅÂç°Âà∏', color: '#87CEEB' }
  ];

  // Êé®ËçêÂïÜÂìÅÊï∞ÊçÆ
  private productData: ProductItem[] = [
    { image: 'https://i0.hdslb.com/bfs/mall/mall/b8/85/b885c2b35f3d0f5c9b8c8f5c9b8c8f5c.png', title: 'BÁ´ô22Â®òÊâãÂäûÊ®°Âûã', price: '¬•299', originalPrice: '¬•399', tag: '‰ºöÂëò‰∏ì‰∫´' },
    { image: 'https://i0.hdslb.com/bfs/mall/mall/c9/96/c996d3c46f4e1f6d0c9d9f6d0c9d9f6d.png', title: 'bilibiliÂë®ËæπTÊÅ§', price: '¬•89', originalPrice: '¬•129', tag: 'ÈôêÊó∂Áâπ‰ª∑' },
    { image: 'https://i0.hdslb.com/bfs/mall/mall/d0/a7/d0a7e4d57f5f2f7e1d0e0f7e1d0e0f7e.png', title: 'BÁ´ôÂÆöÂà∂È©¨ÂÖãÊùØ', price: '¬•39', originalPrice: '¬•59', tag: 'Êñ∞ÂìÅ‰∏äÂ∏Ç' },
    { image: 'https://i0.hdslb.com/bfs/mall/mall/e1/b8/e1b8f5e68f6f3f8f2e1f1f8f2e1f1f8f.png', title: 'UP‰∏ªËÅîÂêçÂæΩÁ´†', price: '¬•19', originalPrice: '¬•29', tag: 'ÁÉ≠ÈîÄ' }
  ];

  aboutToAppear() {
    // ÂêØÂä®ËΩÆÊí≠ÂõæÂÆöÊó∂Âô®
    this.bannerTimer = setInterval(() => {
      this.currentBanner = (this.currentBanner + 1) % this.bannerData.length;
    }, 3000);
  }

  aboutToDisappear() {
    // Ê∏ÖÈô§ÂÆöÊó∂Âô®
    if (this.bannerTimer !== -1) {
      clearInterval(this.bannerTimer);
    }
  }

  build() {
    Column() {
      // È°∂ÈÉ®ÂØºËà™Ê†è
      this.buildHeader()
      
      // ‰∏ªË¶ÅÂÜÖÂÆπÂå∫Âüü
      Scroll() {
        Column({ space: 16 }) {
          // ËΩÆÊí≠Âõæ
          this.buildBanner()
          
          // ‰ºöÂëòÁâπÊùÉÂç°Áâá
          this.buildVipPrivileges()
          
          // ÂïÜÂìÅÂàÜÁ±ª
          this.buildCategories()
          
          // ‰ºòÊÉ†Âà∏Âå∫Âüü
          this.buildCoupons()
          
          // Êé®ËçêÂïÜÂìÅ
          this.buildRecommendProducts()
          
          // Â∫ïÈÉ®Èó¥Ë∑ù
          Blank().height(20)
        }
        .padding({ left: 16, right: 16 })
      }
      .scrollBar(BarState.Off)
      .backgroundColor('#F8F9FA')
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#FFFFFF')
  }

  // ÊûÑÂª∫È°∂ÈÉ®ÂØºËà™Ê†è
  @Builder
  buildHeader() {
    Row() {
      Text('‰ºöÂëòË¥≠Áâ©')
        .fontSize(20)
        .fontWeight(FontWeight.Bold)
        .fontColor('#333333')
      
      Blank()
      
      Row({ space: 16 }) {
        Text('üîç')
          .fontSize(20)
          .onClick(() => {
            // ÊêúÁ¥¢ÂäüËÉΩ
          })
        
        Text('üõí')
          .fontSize(20)
          .onClick(() => {
            // Ë¥≠Áâ©ËΩ¶ÂäüËÉΩ
          })
      }
    }
    .width('100%')
    .height(56)
    .padding({ left: 16, right: 16 })
    .backgroundColor('#FFFFFF')
    .shadow({ radius: 2, color: '#1A000000', offsetY: 1 })
  }

  // ÊûÑÂª∫ËΩÆÊí≠Âõæ
  @Builder
  buildBanner() {
    Stack() {
      Swiper() {
        ForEach(this.bannerData, (item: BannerItem) => {
          Stack() {
            Image(item.image)
              .width('100%')
              .height(180)
              .borderRadius(12)
              .objectFit(ImageFit.Cover)
              .alt($r('app.media.photo35'))
            
            // Ê∏êÂèòÈÅÆÁΩ©
            Column()
              .width('100%')
              .height(60)
              .linearGradient({
                direction: GradientDirection.Bottom,
                colors: [['#00000000', 0.0], ['#80000000', 1.0]]
              })
              .borderRadius({ bottomLeft: 12, bottomRight: 12 })
              .position({ x: 0, y: 120 })
            
            // Ê†áÈ¢ò
            Text(item.title)
              .fontSize(16)
              .fontColor('#FFFFFF')
              .fontWeight(FontWeight.Medium)
              .position({ x: 16, y: 140 })
          }
        })
      }
      .width('100%')
      .height(180)
      .borderRadius(12)
      .autoPlay(true)
      .interval(3000)
      .indicator(false)
      .onChange((index: number) => {
        this.currentBanner = index;
      })
      
      // Ëá™ÂÆö‰πâÊåáÁ§∫Âô®
      Row({ space: 6 }) {
        ForEach(this.bannerData, (item: BannerItem, index: number) => {
          Circle({ width: 6, height: 6 })
            .fill(this.currentBanner === index ? '#FF6B9D' : '#FFFFFF80')
        })
      }
      .position({ x: '50%', y: 160 })
      .translate({ x: '-50%' })
    }
    .margin({ top: 16 })
  }

  // ÊûÑÂª∫‰ºöÂëòÁâπÊùÉÂç°Áâá
  @Builder
  buildVipPrivileges() {
    Column({ space: 12 }) {
      Row() {
        Text('‰ºöÂëòÁâπÊùÉ')
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
          .fontColor('#333333')
        
        Blank()
        
        Text('Êü•ÁúãÂÖ®ÈÉ® >')
          .fontSize(14)
          .fontColor('#FF6B9D')
      }
      .width('100%')
      
      Row({ space: 12 }) {
        // ‰∏ì‰∫´ÊäòÊâ£
        Column({ space: 8 }) {
          Text('üíé')
            .fontSize(24)
          Text('‰∏ì‰∫´ÊäòÊâ£')
            .fontSize(14)
            .fontColor('#333333')
          Text('9ÊäòËµ∑')
            .fontSize(12)
            .fontColor('#FF6B9D')
        }
        .width('25%')
        .height(80)
        .backgroundColor('#FFFFFF')
        .borderRadius(12)
        .justifyContent(FlexAlign.Center)
        .shadow({ radius: 4, color: '#1A000000', offsetY: 2 })
        
        // ÂÖçË¥πÈÖçÈÄÅ
        Column({ space: 8 }) {
          Text('üöö')
            .fontSize(24)
          Text('ÂÖçË¥πÈÖçÈÄÅ')
            .fontSize(14)
            .fontColor('#333333')
          Text('ÂåÖÈÇÆ')
            .fontSize(12)
            .fontColor('#4ECDC4')
        }
        .width('25%')
        .height(80)
        .backgroundColor('#FFFFFF')
        .borderRadius(12)
        .justifyContent(FlexAlign.Center)
        .shadow({ radius: 4, color: '#1A000000', offsetY: 2 })
        
        // ‰∏ìÂ±ûÂÆ¢Êúç
        Column({ space: 8 }) {
          Text('üë•')
            .fontSize(24)
          Text('‰∏ìÂ±ûÂÆ¢Êúç')
            .fontSize(14)
            .fontColor('#333333')
          Text('7x24h')
            .fontSize(12)
            .fontColor('#45B7D1')
        }
        .width('25%')
        .height(80)
        .backgroundColor('#FFFFFF')
        .borderRadius(12)
        .justifyContent(FlexAlign.Center)
        .shadow({ radius: 4, color: '#1A000000', offsetY: 2 })
        
        // ÁßØÂàÜËøîËøò
        Column({ space: 8 }) {
          Text('‚≠ê')
            .fontSize(24)
          Text('ÁßØÂàÜËøîËøò')
            .fontSize(14)
            .fontColor('#333333')
          Text('ÂèåÂÄç')
            .fontSize(12)
            .fontColor('#FFEAA7')
        }
        .width('25%')
        .height(80)
        .backgroundColor('#FFFFFF')
        .borderRadius(12)
        .justifyContent(FlexAlign.Center)
        .shadow({ radius: 4, color: '#1A000000', offsetY: 2 })
      }
      .width('100%')
    }
    .margin({ top: 16 })
  }

  // ÊûÑÂª∫ÂïÜÂìÅÂàÜÁ±ª
  @Builder
  buildCategories() {
    Column({ space: 12 }) {
      Row() {
        Text('ÂïÜÂìÅÂàÜÁ±ª')
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
          .fontColor('#333333')
      }
      .width('100%')
      
      Grid() {
        ForEach(this.categoryData, (item: CategoryItem) => {
          GridItem() {
            Column({ space: 8 }) {
              Text(item.icon)
                .fontSize(28)
              Text(item.name)
                .fontSize(12)
                .fontColor('#333333')
            }
            .width('100%')
            .height(80)
            .backgroundColor('#FFFFFF')
            .borderRadius(12)
            .justifyContent(FlexAlign.Center)
            .shadow({ radius: 4, color: '#1A000000', offsetY: 2 })
            .border({ width: 2, color: item.color, radius: 12 })
            .onClick(() => {
              // ÂàÜÁ±ªÁÇπÂáª‰∫ã‰ª∂
            })
          }
        })
      }
      .columnsTemplate('1fr 1fr 1fr 1fr')
      .rowsTemplate('1fr 1fr')
      .columnsGap(12)
      .rowsGap(12)
      .width('100%')
      .height(172)
    }
    .margin({ top: 16 })
  }

  // ÊûÑÂª∫‰ºòÊÉ†Âà∏Âå∫Âüü
  @Builder
  buildCoupons() {
    Column({ space: 12 }) {
      Row() {
        Text('ÈôêÊó∂‰ºòÊÉ†Âà∏')
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
          .fontColor('#333333')
        
        Blank()
        
        Text('Êõ¥Â§ö‰ºòÊÉ† >')
          .fontSize(14)
          .fontColor('#FF6B9D')
      }
      .width('100%')
      
      Row({ space: 12 }) {
        // Êª°ÂáèÂà∏
        Row({ space: 12 }) {
          Column() {
            Text('¬•20')
              .fontSize(20)
              .fontWeight(FontWeight.Bold)
              .fontColor('#FFFFFF')
            Text('Êª°100ÂèØÁî®')
              .fontSize(10)
              .fontColor('#FFFFFF')
          }
          .width(60)
          .height(60)
          .backgroundColor('#FF6B9D')
          .borderRadius(8)
          .justifyContent(FlexAlign.Center)
          
          Column({ space: 4 }) {
            Text('Êª°ÂáèÂà∏')
              .fontSize(14)
              .fontWeight(FontWeight.Medium)
              .fontColor('#333333')
            Text('Êª°100Âáè20')
              .fontSize(12)
              .fontColor('#666666')
            Text('ÊúâÊïàÊúüËá≥12-31')
              .fontSize(10)
              .fontColor('#999999')
          }
          .alignItems(HorizontalAlign.Start)
          .layoutWeight(1)
          
          Button('È¢ÜÂèñ')
            .width(50)
            .height(28)
            .fontSize(12)
            .backgroundColor('#FF6B9D')
            .borderRadius(14)
        }
        .width('48%')
        .height(80)
        .backgroundColor('#FFFFFF')
        .borderRadius(12)
        .padding(12)
        .shadow({ radius: 4, color: '#1A000000', offsetY: 2 })
        
        // ÊäòÊâ£Âà∏
        Row({ space: 12 }) {
          Column() {
            Text('9Êäò')
              .fontSize(18)
              .fontWeight(FontWeight.Bold)
              .fontColor('#FFFFFF')
            Text('Êó†Èó®Êßõ')
              .fontSize(10)
              .fontColor('#FFFFFF')
          }
          .width(60)
          .height(60)
          .backgroundColor('#4ECDC4')
          .borderRadius(8)
          .justifyContent(FlexAlign.Center)
          
          Column({ space: 4 }) {
            Text('ÊäòÊâ£Âà∏')
              .fontSize(14)
              .fontWeight(FontWeight.Medium)
              .fontColor('#333333')
            Text('ÂÖ®Âú∫9Êäò')
              .fontSize(12)
              .fontColor('#666666')
            Text('ÊúâÊïàÊúüËá≥12-31')
              .fontSize(10)
              .fontColor('#999999')
          }
          .alignItems(HorizontalAlign.Start)
          .layoutWeight(1)
          
          Button('È¢ÜÂèñ')
            .width(50)
            .height(28)
            .fontSize(12)
            .backgroundColor('#4ECDC4')
            .borderRadius(14)
        }
        .width('48%')
        .height(80)
        .backgroundColor('#FFFFFF')
        .borderRadius(12)
        .padding(12)
        .shadow({ radius: 4, color: '#1A000000', offsetY: 2 })
      }
      .width('100%')
    }
    .margin({ top: 16 })
  }

  // ÊûÑÂª∫Êé®ËçêÂïÜÂìÅ
  @Builder
  buildRecommendProducts() {
    Column({ space: 12 }) {
      Row() {
        Text('‰∏∫‰Ω†Êé®Ëçê')
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
          .fontColor('#333333')
        
        Blank()
        
        Text('Êç¢‰∏ÄÊâπ üîÑ')
          .fontSize(14)
          .fontColor('#FF6B9D')
      }
      .width('100%')
      
      Grid() {
        ForEach(this.productData, (item: ProductItem) => {
          GridItem() {
            Column({ space: 8 }) {
              Stack() {
                Image(item.image)
                  .width('100%')
                  .height(120)
                  .borderRadius({ topLeft: 12, topRight: 12 })
                  .objectFit(ImageFit.Cover)
                  .alt($r('app.media.photo35'))
                
                // Ê†áÁ≠æ
                Text(item.tag)
                  .fontSize(10)
                  .fontColor('#FFFFFF')
                  .backgroundColor('#FF6B9D')
                  .padding({ left: 6, right: 6, top: 2, bottom: 2 })
                  .borderRadius(4)
                  .position({ x: 8, y: 8 })
              }
              
              Column({ space: 4 }) {
                Text(item.title)
                  .fontSize(14)
                  .fontColor('#333333')
                  .maxLines(2)
                  .textOverflow({ overflow: TextOverflow.Ellipsis })
                
                Row({ space: 8 }) {
                  Text(item.price)
                    .fontSize(16)
                    .fontWeight(FontWeight.Bold)
                    .fontColor('#FF6B9D')
                  
                  Text(item.originalPrice)
                    .fontSize(12)
                    .fontColor('#999999')
                    .decoration({ type: TextDecorationType.LineThrough })
                }
                .alignItems(VerticalAlign.Bottom)
              }
              .padding({ left: 8, right: 8, bottom: 8 })
              .alignItems(HorizontalAlign.Start)
            }
            .width('100%')
            .backgroundColor('#FFFFFF')
            .borderRadius(12)
            .shadow({ radius: 4, color: '#1A000000', offsetY: 2 })
            .onClick(() => {
              // ÂïÜÂìÅËØ¶ÊÉÖÈ°µ
            })
          }
        })
      }
      .columnsTemplate('1fr 1fr')
      .columnsGap(12)
      .rowsGap(12)
      .width('100%')
    }
    .margin({ top: 16 })
  }
}